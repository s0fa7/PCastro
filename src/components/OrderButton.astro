---
import type { HTMLAttributes } from "astro/types";

interface Props extends HTMLAttributes<"button"> {
  text?: string;
  rotate?: boolean;
}

const { text = "показать всё", rotate = false, ...attrs } = Astro.props;
---

<div class="button-container">
  <button {...attrs}>
    <span class="text">{text}</span>
    <span class:list={["arrow-wrapper", { "rotate-90": rotate }]}>
      &gt;&gt;
    </span>
  </button>
</div>

<style>
  .button-container {
    display: inline-block;
  }

  button {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
  }

  .text {
    color: oklch(from var(--body-text) l c h);
    font-size: 16px;
    font-family: "JetBrainsMono", sans-serif;
    margin-right: 15px;
    text-transform: uppercase;
  }

  .arrow-wrapper {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 48px;
    height: 48px;

    background-image: url(/src/assets/icons/OrderBgBtn.svg);
    background-repeat: no-repeat;
    background-position: center;
    transition:
      transform 0.1s ease-in-out,
      box-shadow 0.1s ease-in-out;
    transform: rotate(0deg);
  }

  .arrow-wrapper.rotate-90 {
    transform: rotate(90deg);
  }

  .arrow {
    font-size: 14px;
    font-weight: 600;
  }

  .arrow-wrapper:hover {
    box-shadow: 0 5px 15px oklch(from var(--purple) l c h);
    background-image: url(/src/assets/icons/OrderBtnPurple.svg);
    background-repeat: no-repeat;
    background-position: center;
    color: oklch(from var(--white)l c h);
  }
</style>
